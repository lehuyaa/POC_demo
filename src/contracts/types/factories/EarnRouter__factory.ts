/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { EarnRouter, EarnRouterInterface } from "../EarnRouter";

const _abi = [
  {
    type: "constructor",
    stateMutability: "nonpayable",
    inputs: [],
  },
  {
    type: "event",
    name: "AdminProjectRouterSet",
    inputs: [
      {
        type: "address",
        name: "oldAdmin",
        internalType: "address",
        indexed: true,
      },
      {
        type: "address",
        name: "newAdmin",
        internalType: "address",
        indexed: true,
      },
      {
        type: "address",
        name: "caller",
        internalType: "address",
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "string",
        name: "",
        internalType: "string",
      },
    ],
    name: "PROJECT",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "address",
        name: "",
        internalType: "contract IAdminProjectRouter",
      },
    ],
    name: "adminProjectRouter",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "deposit",
    inputs: [
      {
        type: "address",
        name: "poolAddress",
        internalType: "address",
      },
      {
        type: "address",
        name: "_token",
        internalType: "address",
      },
      {
        type: "uint256",
        name: "_rewardAmount",
        internalType: "uint256",
      },
      {
        type: "address[]",
        name: "_nftAddress",
        internalType: "address[]",
      },
      {
        type: "uint256[]",
        name: "_tokenIds",
        internalType: "uint256[]",
      },
      {
        type: "address",
        name: "_bitkubNexUser",
        internalType: "address",
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setAdminProjectRouter",
    inputs: [
      {
        type: "address",
        name: "_adminProjectRouter",
        internalType: "address",
      },
    ],
  },
];

export class EarnRouter__factory {
  static readonly abi = _abi;
  static createInterface(): EarnRouterInterface {
    return new utils.Interface(_abi) as EarnRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EarnRouter {
    return new Contract(address, _abi, signerOrProvider) as EarnRouter;
  }
}
